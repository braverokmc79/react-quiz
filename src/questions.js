export default [
    {
      id: 'q1',
      text: '다음 중 React.js를 가장 잘 설명하는 정의는 무엇입니까?',
      answers: [
        '선언적 코드를 사용하여 사용자 인터페이스를 구축하는 라이브러리입니다.',
        '웹 애플리케이션에서 상태를 관리하는 라이브러리입니다.',
        '명령적 코드를 사용하여 사용자 인터페이스를 구축하는 프레임워크입니다.',
        '모바일 애플리케이션만을 위한 라이브러리입니다.',
      ],
    },
    {
      id: 'q2',
      text: 'React 훅이란 무엇을 위한 것입니까?',
      answers: [
        '함수형 컴포넌트에서 상태 및 기타 React 기능을 사용할 수 있게 합니다.',
        'React 애플리케이션에서 반응형 레이아웃을 만드는 것입니다.',
        '애플리케이션 내에서 오류를 처리하는 것입니다.',
        '전역 상태를 관리하기 위한 Redux 라이브러리의 일부입니다.',
      ],
    },
    {
      id: 'q3',
      text: 'JSX가 무엇인지 알 수 있습니까?',
      answers: [
        'JavaScript에 HTML과 유사한 문법을 추가하는 JavaScript 확장입니다.',
        '동적 사용자 인터페이스를 구축하기 위한 JavaScript 라이브러리입니다.',
        'React를 위해 특별히 만들어진 특정 HTML 버전입니다.',
        'React 애플리케이션에서 HTTP 요청을 만드는 도구입니다.',
      ],
    },
    {
      id: 'q4',
      text: 'React에서 컴포넌트를 생성하는 가장 일반적인 방법은 무엇입니까?',
      answers: [
        '렌더링 가능한 값을 반환하는 JavaScript 함수를 정의합니다.',
        'JavaScript에서 사용자 정의 HTML 태그를 정의합니다.',
        '.jsx 확장자를 가진 파일을 생성합니다.',
        '"new" 키워드 다음에 컴포넌트 이름을 사용합니다.',
      ],
    },
    {
      id: 'q5',
      text: '"React 상태"라는 용어는 무엇을 의미합니까?',
      answers: [
        '값들을 보유하고 변경 시 컴포넌트가 렌더링될 수 있는 컴포넌트 내의 객체입니다.',
        'React 컴포넌트가 있는 생명주기 단계입니다.',
        '모든 props와 컴포넌트를 포함한 React 애플리케이션의 전체 상태입니다.',
        'React 애플리케이션에서 전역 상태를 관리하기 위한 라이브러리입니다.',
      ],
    },
    {
        id: 'q6',
        text: 'React 앱에서 리스트 컨텐츠를 일반적으로 어떻게 렌더링합니까?',
        answers: [
          'map() 메소드를 사용하여 데이터 배열을 반복하고 JSX를 반환합니다.',
          'for() 루프를 사용하여 데이터 배열을 반복하고 JSX를 반환합니다.',
          'forEach() 메소드를 사용하여 데이터 배열을 반복하고 JSX를 반환합니다.',
          'loop() 메소드를 사용하여 데이터 배열을 반복하고 JSX를 반환합니다.',
        ],
      },
      {
        id: 'q7',
        text: '조건부 컨텐츠를 렌더링하는 데 사용할 수 없는 접근 방식은 무엇입니까?',
        answers: [
          '#if 템플릿 문법을 사용하는 것입니다.',
          '삼항 연산자를 사용하는 것입니다.',
          '&& 연산자를 사용하는 것입니다.',
          'if-else 문을 사용하는 것입니다.',
        ],
      },

  ];
  